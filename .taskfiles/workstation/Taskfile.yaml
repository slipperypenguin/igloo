---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

vars:
  WORKSTATION_RESOURCES_DIR: '{{.ROOT_DIR}}/.taskfiles/workstation/resources'

tasks:

  debug:
    desc: Gather common resources in your cluster, useful when asking for support
    cmds:
      - for: { var: RESOURCE }
        cmd: kubectl get {{.ITEM}} {{.CLI_ARGS | default "-A"}}
    vars:
      RESOURCE: >-
        nodes
        gitrepositories
        kustomizations
        helmrepositories
        helmreleases
        certificates
        certificaterequests
        ingresses
        pods
    preconditions:
      - test -f {{.KUBECONFIG}}
      - which kubectl

  pre-commit-validation:
    desc: Encrypt "*.sops.*" files + Validate configuration files
    prompt: Any conflicting files in the kubernetes directory will be overwritten... continue?
    cmds:
      - task: encrypt-secrets
      - task: validate-kubernetes-config
      - task: validate-talos-config
    preconditions:
      - msg: |
          An existing Age key interferes with age key in this repository.
          Rename or delete ~/.config/sops/age/keys.txt
        sh: '! test -f ~/.config/sops/age/keys.txt'

  decrypt-secrets:
    desc: Decrypt secrets with Sops
    prompt: All sops files will be decrypted and secrets will be in plaintext... continue?
    cmds:
      - for: { var: SECRET_FILES }
        cmd: |
          if sops filestatus "{{.ITEM}}" | jq --exit-status ".encrypted == true" &>/dev/null; then
              sops --decrypt --in-place "{{.ITEM}}"
          fi
    vars:
      SECRET_FILES:
        sh: find "{{.BOOTSTRAP_DIR}}" "{{.KUBERNETES_DIR}}" "{{.TALOS_DIR}}" -type f -name "*.sops.*"
    preconditions:
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - which sops

  encrypt-secrets:
    desc: Encrypt secrets with Sops
    cmds:
      - for: { var: SECRET_FILES }
        cmd: |
          if sops filestatus "{{.ITEM}}" | jq --exit-status ".encrypted == false" &>/dev/null; then
              sops --encrypt --in-place "{{.ITEM}}"
          fi
    vars:
      SECRET_FILES:
        sh: find "{{.BOOTSTRAP_DIR}}" "{{.KUBERNETES_DIR}}" "{{.TALOS_DIR}}" -type f -name "*.sops.*"
    preconditions:
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - which sops

  validate-kubernetes-config:
    desc: Validate Kubernetes manifests with kubeconform
    cmd: bash {{.WORKSTATION_RESOURCES_DIR}}/kubeconform.sh {{.KUBERNETES_DIR}}
    preconditions:
      - test -f {{.WORKSTATION_RESOURCES_DIR}}/kubeconform.sh
      - which kubeconform

  validate-talos-config:
    desc: Validate the Talhelper config
    dir: '{{.TALOS_DIR}}'
    cmd: talhelper validate talconfig {{.TALOS_DIR}}/talconfig.yaml
    preconditions:
      - test -f {{.TALOS_DIR}}/talconfig.yaml
      - which talhelper

  brew:
    desc: Set up Homebrew tools
    cmds:
      - brew bundle --file {{.WORKSTATION_RESOURCES_DIR}}/Brewfile
    sources:
      - '{{.WORKSTATION_RESOURCES_DIR}}/Brewfile'
    generates:
      - '{{.WORKSTATION_RESOURCES_DIR}}/Brewfile.lock.json'
    preconditions:
      - which brew
      - test -f {{.WORKSTATION_RESOURCES_DIR}}/Brewfile

  krew:
    desc: Set up Krew tools
    deps: [brew]
    cmds:
      - kubectl krew install cert-manager browse-pvc rook-ceph view-secret
    preconditions:
      - kubectl krew version
      - which kubectl

